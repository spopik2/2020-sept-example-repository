@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Multi Record Query";

    //retrieve the list of categorizes from the database
    // the data is needed in the form
    var db = Database.Open("NWD");
    var querycommand = @"Select CategoryID, CategoryName
                From Categories
                Order By CategoryName";
    //if you have possible multiple records being returned
    //  by your query, then use the .Query() execution
    var ddlResults = db.Query(querycommand);
    var categoryselection = "0";
}
@section banner {<h3>Multi Record Query</h3>}

@if (IsPost)
{
    categoryselection = Request.Form["CategoryList"];
    if (categoryselection.Equals("0"))
    {
        <p><span style="color:firebrick">Make a selection from the category list.</span></p>
    }
    else
    {
        //determine if there is anything to display 
        // for the selected category
        //execute a query against a product table to see
        // if the selected category has any products
        var querysearch = @"Select ProductID
                             From Products
                             Where CategoryID = @0";
        var results = db.Query(querysearch, categoryselection);

        //to test if any records were returned from the sql query
        // check the results for a record .Count() == 0
        //if no records were returned, the count is 0
        //if 1,2 or more records were returned the count is > 0
        if(results.Count()== 0)
        {
            <p><span style="color:firebrick">There are no records from the selected catagory list.</span></p>
        }
        else
        {
            //<p><span style="color:green">There are @results.Count() products in the selected category.</span></p>
            // passing data to another page
            //data passed this way is done via the HTML GetHTML()
            //the questionmark indicates parameter(s) to follow
            //parameter: label=value
            //& seperates multiple parameters
            Response.Redirect("WebGridDemo.cshtml?cid=" + categoryselection);
        }
    }
}
else
{
    // initialize your form for your 1 pass
    categoryselection = "0";
}

<form id="theForm" method="post">
    <div class="row">
        <div class="offset-3">
            <label for="CategoryList">Select a category </label>&nbsp;&nbsp;
            <select name="CategoryList" id=" CategoryList">
                <option value="0">Select ...</option>
                @* loop throughthe collection of records in
                     ddlResults
                     create a line in the ddl for each item in the collection
                        referencing an item column iog the collection
                        can be done either with an index or propertyname
                        technique*@
                @foreach (var item in ddlResults)
                {
                    // how to retain the current selection inside a ddl
                    //test against the value property
                    if (item.CategoryID.ToString() == categoryselection)
                    {
                        <option value="@item.CategoryID" selected>@item.CategoryName</option>
                    }
                    else
                    {
                        <option value="@item.CategoryID">@item.CategoryName</option>
                    }
                }
            </select>&nbsp;&nbsp;
            <button type="submit" name="theButton" id="theButton" value="submit" class="btn btn-primary">
                Search
            </button>
        </div>
    </div>
</form>
